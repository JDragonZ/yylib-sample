"use strict";

Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.execute = execute;
/*
 * 功能：数字运算
 * @param c,d 小数"字符串"
 * @param n 运算类型： 0为+ 1为- 2为乘 3为除
 */
function execute(c, d, n) {
    // 去掉空相
    var re = /\s/g;
    var a = c.replace(re, "");
    var b = d.replace(re, "");

    var cutN = "10000000000000";
    var cutZero = "00000000000";

    var dot = ".";

    // 将小数输入为整数
    var adot = a.indexOf(dot) > 0 ? a.length - a.indexOf(dot) : 0;
    var bdot = b.indexOf(dot) > 0 ? b.length - b.indexOf(dot) : 0;

    var cutA = adot > 0 ? parseInt(cutN.substr(0, adot)) : 1;
    var cutB = bdot > 0 ? parseInt(cutN.substr(0, bdot)) : 1;

    var maxcutAB = Math.max(cutA, cutB);
    var mincutAB = Math.min(cutA, cutB);

    var cutAB = maxcutAB / mincutAB;
    var numA = 0;
    var numB = 0;

    var inzero = cutZero.substr(0, cutAB.toString().length - 1);
    var cutLen = maxcutAB.toString().length - 1;

    if (adot == bdot) {
        numA = parseInt(a.replace(dot, ""), 10);
        numB = parseInt(b.replace(dot, ""), 10);
    } else if (adot > bdot) {
        numA = parseInt(a.replace(dot, ""), 10);
        numB = parseInt(b.replace(dot, "") + inzero, 10);
    } else {
        numB = parseInt(b.replace(dot, ""), 10);
        numA = parseInt(a.replace(dot, "") + inzero, 10);
    }

    var numAB = "0.0";
    var lastN = "0.0";

    switch (n) {
        case 0:
            // 加
            numAB = ((numA + numB) / maxcutAB).toString();
            break;
        case 1:
            // 减
            numAB = ((numA - numB) / maxcutAB).toString();
            break;
        case 2:
            // 乘
            numAB = Math.abs(numA * numB).toString();
            cutLen = cutLen * 2;
            break;
        case 3:
            // 除
            numAB = (numA / numB).toString();
            break;
    }
    // 对乘法的特别处理
    if (n == 2) {
        if (numAB.length <= cutLen) {
            numAB = cutZero.substr(0, cutLen - numAB.length + 1) + numAB;
        }
        if (Math.abs(numA * numB) != numA * numB) {
            numAB = "-" + numAB;
        }
        numAB = numAB.slice(0, numAB.length - cutLen) + "." + numAB.slice(numAB.length - cutLen);
    }
    return parseFloat(numAB).toString();
}