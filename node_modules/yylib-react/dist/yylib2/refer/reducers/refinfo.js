'use strict';

var _lodash = require('lodash');

var _ReferConstants = require('../constants/ReferConstants');

function getRefinfo() {
    var state = arguments.length <= 0 || arguments[0] === undefined ? {
        refinfokey: null, // 参照key
        info: null, //参照信息
        often: null, // 常用数据
        tree: null,
        grid: null,
        treegrid: null,
        doReload: false,
        showMsg: null
    } : arguments[0];
    var action = arguments.length <= 1 || arguments[1] === undefined ? { type: type } : arguments[1];

    switch (action.type) {
        case _ReferConstants.GET_REFINFO_BYCODE_SUCCESS:
            return (0, _lodash.assign)({}, state, {
                refinfokey: action.key,
                info: action.data,
                treegrid: null,
                doReload: false,
                showMsg: null
            });
        case _ReferConstants.GET_REFINFO_BYCODE_ERROR:
            return (0, _lodash.assign)({}, state, {
                info: null,
                doReload: false,
                showMsg: null
            });
        case _ReferConstants.GET_REFER_OFTEN_SUCCESS:
            return (0, _lodash.assign)({}, state, {
                often: action.data,
                showMsg: null
            });
        case _ReferConstants.SAVE_REFER_OFTEN_SUCCESS:
            return (0, _lodash.assign)({}, state, {
                often: action.data,
                showMsg: action.ifShowMsg === true ? { 'success': '保存常用成功' } : null
            });
        case _ReferConstants.SAVE_REFER_OFTEN_ERROR:
            return (0, _lodash.assign)({}, state, {
                showMsg: { 'error': action.errorMsg }
            });
        case _ReferConstants.DELETE_REFER_OFTEN_SUCCESS:
            return (0, _lodash.assign)({}, state, {
                often: action.data,
                showMsg: null
            });
        case _ReferConstants.DELETE_REFER_OFTEN_ERROR:
            return (0, _lodash.assign)({}, state, {
                showMsg: { 'error': action.errorMsg }
            });
        case _ReferConstants.GET_TREEDATA_REF_SUCCESS:
            return (0, _lodash.assign)({}, state, {
                tree: action.data,
                //树切换时，清空树表中的表数据,但是保留表头
                // treegrid: {"header":state.treegrid?state.treegrid.header:null, data:{}},
                doReload: false,
                showMsg: null
            });
        case _ReferConstants.GET_TREEDATA_REF_ERROR:
            return (0, _lodash.assign)({}, state, {
                tree: null,
                doReload: false,
                showMsg: null
            });
        case _ReferConstants.GET_GRIDDATA_REF_SUCCESS:
            return (0, _lodash.assign)({}, state, {
                grid: action.data,
                doReload: false,
                showMsg: null
            });
        case _ReferConstants.GET_GRIDDATA_REF_ERROR:
            return (0, _lodash.assign)({}, state, {
                grid: null,
                doReload: false,
                showMsg: null
            });
        case _ReferConstants.GET_TREEGRIDDATA_REF_SUCCESS:
            return (0, _lodash.assign)({}, state, {
                treegrid: action.data,
                doReload: false,
                showMsg: null
            });
        case _ReferConstants.GET_TREEGRIDDATA_REF_ERROR:
            return (0, _lodash.assign)({}, state, {
                treegrid: null,
                doReload: false,
                showMsg: null
            });

        case _ReferConstants.GET_TREE_AND_GRID_REF_SUCCESS:
            return (0, _lodash.assign)({}, state, {
                tree: action.treeData,
                treegrid: action.treeGridData,
                doReload: false,
                showMsg: null
            });
        case _ReferConstants.DO_RELOAD_REF:
            return (0, _lodash.assign)({}, state, {
                doReload: true,
                showMsg: null
            });
        case _ReferConstants.DO_CLEAR_PREDATAS:
            return (0, _lodash.assign)({}, state, {
                // info : null,
                tree: null,
                grid: null,
                treegrid: null,
                doReload: false,
                showMsg: null
            });
        default:
            return state;
    }
}
module.exports = getRefinfo;