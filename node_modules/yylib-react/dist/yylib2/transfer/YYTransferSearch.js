'use strict';

/**
 * Created by wuhao on 16/7/19.
 */

var React = require('react');
var YYClass = require('../base/YYClass');

var _require = require('antd');

var Icon = _require.Icon;
var Input = _require.Input;

require('./style/index.less');

function noop() {}

var YYTransferSearch = YYClass.create({
    uiName: 'transfer-search',
    getDefaultProps: function getDefaultProps() {
        return {
            searchPlaceholder: '',
            handleOnInputChange: noop,
            handleClear: noop,
            handleFindPrevious: noop,
            handleFindNext: noop
        };
    },
    handleOnInputChange: function handleOnInputChange(e) {
        this.props.handleOnInputChange(e);
    },
    handleClear: function handleClear(e) {
        e.preventDefault();
        this.props.handleClear(e);
    },
    handleFindPrevious: function handleFindPrevious(e) {
        this.props.handleFindPrevious(e);
    },
    handleFindNext: function handleFindNext(e) {
        this.props.handleFindNext(e);
    },
    renderSearchIcon: function renderSearchIcon(searchText) {
        var renderSearchIcon;
        if (searchText) {
            renderSearchIcon = React.createElement(
                'div',
                null,
                React.createElement(
                    'span',
                    { className: 'search-cancel', onClick: this.handleClear },
                    React.createElement(Icon, { type: 'cross-circle' })
                ),
                React.createElement(
                    'span',
                    { className: 'search-ok', onClick: this.handleFindNext },
                    React.createElement(Icon, { type: 'search' })
                )
            );
        } else {
            renderSearchIcon = React.createElement(
                'span',
                { className: 'search-ok', onClick: this.handleFindNext },
                React.createElement(Icon, { type: 'search' })
            );
        }
        return renderSearchIcon;
    },
    render: function render() {
        var value = this.props.value;

        return React.createElement(
            'div',
            { className: this.className() },
            React.createElement(
                'div',
                { className: 'search-input' },
                React.createElement(Input, { placeholder: this.props.searchPlaceholder,
                    onChange: this.handleOnInputChange,
                    value: value }),
                this.renderSearchIcon(value)
            ),
            React.createElement(
                'span',
                { className: 'search-previous', onClick: this.handleFindPrevious },
                React.createElement(Icon, { type: 'circle-up' })
            ),
            React.createElement(
                'span',
                { className: 'search-next', onClick: this.handleFindNext },
                React.createElement(Icon, { type: 'circle-down' })
            )
        );
    }
});

module.exports = YYTransferSearch;