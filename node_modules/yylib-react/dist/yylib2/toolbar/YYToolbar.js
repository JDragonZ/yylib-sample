'use strict';

var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };

/**
 * Created by Dio on 2016/5/12.
 * 工具栏
 */
require('./style/index.less');
var React = require('react');
var YYClass = require('../base/YYClass');
var YYAffix = require('../affix/YYAffix');
var PropTypes = YYClass.PropTypes;
var field = YYClass.field;
//定义META
var uiMeta = {
    name: 'toolbar',
    fields: [field('enableAffix', false, PropTypes.bool, false, '是否启用固定')]
};
var YYToolbar = YYClass.create({
    uiMeta: uiMeta,
    render: function render() {
        var view = null;
        if (this.props.enableAffix == true || this.props.enableAffix == 'true') {
            view = React.createElement(
                YYAffix,
                null,
                React.createElement(
                    'div',
                    _extends({}, this.props, { className: this.className() }),
                    this.props.children
                )
            );
        } else {
            view = React.createElement(
                'div',
                _extends({}, this.props, { className: this.className() }),
                this.props.children
            );
        }
        return view;
    }
});

module.exports = YYToolbar;