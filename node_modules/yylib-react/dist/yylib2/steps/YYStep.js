'use strict';

var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };

/**
 * 步骤条组件
 */
var React = require('react');
var YYClass = require('../base/YYClass');
var PropTypes = YYClass.PropTypes;
var field = YYClass.field;

var _require = require('antd');

var Steps = _require.Steps;

var Step = Steps.Step;

//定义META
var uiMeta = {
    name: 'step',
    fields: [
    // field参数列表：字段属性名|属性默认值|属性类型|是否必填|属性描述
    field('status', undefined, PropTypes.oneOf(['wait', 'process', 'finish', 'error']), false, '指定当前步骤的状态'), field('title', '', PropTypes.element, true, '标题'), field('description', '', PropTypes.element, true, '标题'), field('icon', '', PropTypes.element, true, '标题')]
};

var YYStep = YYClass.create({
    uiMeta: uiMeta,
    getInitialState: function getInitialState() {
        return {};
    },
    render: function render() {
        return React.createElement(
            Step,
            _extends({}, this.props, { className: this.className() }),
            this.props.children
        );
    }
});
module.exports = YYStep;