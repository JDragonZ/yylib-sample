'use strict';

var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };

/**
 * Created by Dio on 2016/7/21.
 * 手风琴组件
 */
var React = require('react');
var YYClass = require('../base/YYClass');

var _require = require('react-dom');

var findDOMNode = _require.findDOMNode;

var PropTypes = YYClass.PropTypes;
var field = YYClass.field;
var RcCollapse = require('rc-collapse');
var RcAccordion = RcCollapse.Panel;
var YYStepsTarget = require('../../business/stepsnav/YYStepsTarget');
//定义META
var uiMeta = {
    name: 'accordion',
    fields: [
    //field参数列表：字段属性名|属性默认值|属性类型|是否必填|属性描述
    field('key', undefined, PropTypes.string, false, '对应 activeKey'), field('isOpen', false, PropTypes.bool, false, '默认是否展开，注意isOpen不能于YYAccordions.defaultActiveKey|activeKey并行使用'), field('header', null, PropTypes.oneOfType([PropTypes.element, PropTypes.string]), false, '面板头内容'), field('enableStepTarget', false, PropTypes.bool, false, '是否启用步骤导航链接功能')]
};
var YYAccordion = YYClass.create({
    uiMeta: uiMeta,
    render: function render() {
        var _props = this.props;
        var enableStepTarget = _props.enableStepTarget;
        var header = _props.header;
        var uikey = _props.uikey;

        var _header = header;
        if (enableStepTarget == true) {
            _header = React.createElement(
                YYStepsTarget,
                { targetKey: uikey },
                header
            );
        }
        return React.createElement(
            RcAccordion,
            _extends({}, this.props, { header: _header }),
            this.props.children
        );
    }
});
module.exports = YYAccordion;