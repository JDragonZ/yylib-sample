'use strict';

/**
 * Created by Dio on 2016/9/3.
 */
var React = require('react');
var _ = require('lodash');
var YYCreateView = require('./YYCreateView');
var DefaultParser = require('./DefaultParser');
var ajax = require('../../utils/ajax');
var api = require('./api.all'); //静态的API方法

var _require = require('./Resturl');

var GET_PAGE_DATA = _require.GET_PAGE_DATA;

var YYCreatePage = React.createClass({
    displayName: 'YYCreatePage',

    statics: {
        API: api
    },
    getDefaultProps: function getDefaultProps() {
        return {
            uiParser: null, //UI组件解析器
            uiEvent: null, //UI事件处理器
            serverUrl: GET_PAGE_DATA
        };
    },
    getInitialState: function getInitialState() {
        return {
            uiMeta: null,
            uiParser: this.props.uiParser,
            uiEvent: this.props.uiEvent
        };
    },
    componentWillReceiveProps: function componentWillReceiveProps(nextProps) {
        if ('uiParser' in nextProps) {
            this.setState({
                uiParser: _.assign(DefaultParser, nextProps.uiParser)
            });
        }
        if ('uiEvent' in nextProps) {
            this.setState({
                uiEvent: nextProps.uiEvent
            });
        }
    }
    //加载页面元数据
    ,
    _loadPageData: function _loadPageData(appCode, pageCode) {
        var self = this;
        if (!appCode || !pageCode) return;
        var serverUrl = this.props.serverUrl;

        ajax.getJSON(serverUrl, { appCode: appCode, pageCode: pageCode }, function (result) {
            var data = null;
            if (result.success && result.backData && result.backData.data) {
                data = JSON.parse(result.backData.data);
            }
            self.setState({ uiMeta: _.isEmpty(data) ? null : data });
        });
    },
    componentDidMount: function componentDidMount() {
        var _props2 = this.props;
        var pageCode = _props2.pageCode;
        var appCode = _props2.appCode;

        var query = this.props.location ? this.props.location.query : {};
        //如果属性不存在则取路由URL参数
        var _appCode = appCode ? appCode : query.appCode;
        var _pageCode = pageCode ? pageCode : query.pageCode;
        this._loadPageData(_appCode, _pageCode);
    },
    render: function render() {
        var _props3 = this.props;
        var router = _props3.router;
        var location = _props3.location;
        var params = _props3.params;
        var route = _props3.route;
        var routeParams = _props3.routeParams;
        var routes = _props3.routes;

        var _props = { router: router, location: location, params: params, route: route, routeParams: routeParams, routes: routes };
        _props.uiMeta = this.state.uiMeta;
        _props.uiParser = this.state.uiParser;
        _props.uiEvent = this.state.uiEvent;
        return this.state.uiMeta ? React.createElement(YYCreateView, _props) : null;
    }
});
module.exports = YYCreatePage;