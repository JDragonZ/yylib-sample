'use strict';

var _redux = require('redux');

var _assign = require('lodash/assign');

var _assign2 = _interopRequireDefault(_assign);

var _ActionTypes = require('../constants/ActionTypes');

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function getBpmData() {
  var state = arguments.length <= 0 || arguments[0] === undefined ? {
    data: null, //审批数据
    view: null, //查审数据
    msg: null, //提示信息
    config: null, //流程信息
    type: null,
    user: null
  } : arguments[0];
  var action = arguments.length <= 1 || arguments[1] === undefined ? { type: type } : arguments[1];

  switch (action.type) {
    case _ActionTypes.BPM_PREAPPROVEQUERY_SUCCESS:
      return (0, _assign2.default)({}, state, {
        data: action.data,
        msg: action.flag,
        type: "preapprovequrey" });
    case _ActionTypes.BPM_PREAPPROVEQUERY_ERROR:
      return (0, _assign2.default)({}, state, {
        msg: action.flag
      });
    case _ActionTypes.BPM_PREREJECT_SUCCESS:
      return (0, _assign2.default)({}, state, {
        data: action.data,
        msg: action.flag,
        type: "bpmprereject" });
    case _ActionTypes.BPM_PREREJECT_ERROR:
      return (0, _assign2.default)({}, state, {
        msg: action.flag
      });
    case _ActionTypes.BPM_REJECT_SUCCESS:
      return (0, _assign2.default)({}, state, {
        data: action.data,
        msg: action.flag,
        type: "bpmreject" });
    case _ActionTypes.BPM_REJECT_ERROR:
      return (0, _assign2.default)({}, state, {
        msg: action.flag
      });
    case _ActionTypes.BPM_VIEWAPPROVEAL_SUCCESS:
      return (0, _assign2.default)({}, state, {
        view: action.data,
        msg: action.flag,
        type: "bpmviewapproveal" });
    case _ActionTypes.BPM_VIEWAPPROVEAL_SUCCESS:
      return (0, _assign2.default)({}, state, {
        msg: action.flag
      });
    case _ActionTypes.BPM_TODOTASK_SUCCESS:
      return (0, _assign2.default)({}, state, {
        data: action.data,
        msg: action.flag,
        type: "todotask" });
    case _ActionTypes.BPM_TODOTASK_ERROR:
      return (0, _assign2.default)({}, state, {
        msg: action.flag
      });
    case _ActionTypes.BPM_DONETASK_SUCCESS:
      return (0, _assign2.default)({}, state, {
        data: action.data,
        msg: action.flag,
        type: "donetask" });
    case _ActionTypes.BPM_DONETASK_ERROR:
      return (0, _assign2.default)({}, state, {
        msg: action.flag
      });
    case _ActionTypes.BPM_UNAPPROVE_SUCCESS:
      return (0, _assign2.default)({}, state, {
        data: action.data,
        msg: action.flag,
        type: "bpmunapprove" });
    case _ActionTypes.BPM_UNAPPROVE_ERROR:
      return (0, _assign2.default)({}, state, {
        msg: action.flag
      });
    case _ActionTypes.BPM_APPROVE_SUCCESS:
      return (0, _assign2.default)({}, state, {
        data: action.data,
        msg: action.flag,
        type: "bpmapprove" });
    case _ActionTypes.BPM_APPROVE_ERROR:
      return (0, _assign2.default)({}, state, {
        msg: action.flag
      });
    case _ActionTypes.BPM_DELEGATETASK_SUCCESS:
      return (0, _assign2.default)({}, state, {
        data: action.data,
        msg: action.flag,
        type: "bpmdelegate" });
    case _ActionTypes.BPM_DELEGATETASK_ERROR:
      return (0, _assign2.default)({}, state, {
        msg: action.flag
      });
    case _ActionTypes.BPM_DISAPPROVE_SUCCESS:
      return (0, _assign2.default)({}, state, {
        data: action.data,
        msg: action.flag,
        type: "bpmdisapprove" });
    case _ActionTypes.BPM_DISAPPROVE_ERROR:
      return (0, _assign2.default)({}, state, {
        msg: action.flag
      });
    case _ActionTypes.BPM_MYSUBMIT_SUCCESS:
      return (0, _assign2.default)({}, state, {
        data: action.data,
        msg: action.flag,
        type: "mysubmit" });
    case _ActionTypes.BPM_MYSUBMIT_ERROR:
      return (0, _assign2.default)({}, state, {
        msg: action.flag
      });
    case _ActionTypes.BPM_GETUSER_SUCCESS:
      //获取登录用户信息
      return (0, _assign2.default)({}, state, {
        user: action.data,
        msg: action.flag
      });
    case _ActionTypes.BPM_GETUSER_ERROR:
      return (0, _assign2.default)({}, state, {
        msg: action.flag
      });
    case _ActionTypes.BPM_APPROVEASSIGNUSER_SUCCESS:
      //获取登录用户信息
      return (0, _assign2.default)({}, state, {
        user: action.data,
        msg: action.flag
      });
    case _ActionTypes.BPM_APPROVEASSIGNUSER_ERROR:
      return (0, _assign2.default)({}, state, {
        msg: action.flag
      });
    case _ActionTypes.BPM_STARTASSIGNUSER_SUCCESS:
      //获取登录用户信息
      return (0, _assign2.default)({}, state, {
        user: action.data,
        msg: action.flag
      });
    case _ActionTypes.BPM_STARTASSIGNUSER_ERROR:
      return (0, _assign2.default)({}, state, {
        msg: action.flag
      });
    case _ActionTypes.BPM_GETCONFIGLIST_SUCCESS:
      //获取流程信息
      return (0, _assign2.default)({}, state, {
        config: action.data,
        msg: action.flag
      });
    case _ActionTypes.BPM_GETCONFIGLIST_ERROR:
      return (0, _assign2.default)({}, state, {
        msg: action.flag
      });
    default:
      return state;
  }
}
module.exports = getBpmData;